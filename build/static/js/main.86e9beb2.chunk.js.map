{"version":3,"sources":["services/persons.js","components/Person.js","App.js","index.js"],"names":["baseUrl","methods","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Person","person","handleRemoval","name","number","onClick","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","errorMessage","setErrorMessage","useEffect","personService","initialPersons","personToShow","filter","toLowerCase","includes","onChange","e","target","value","onSubmit","preventDefault","personObject","find","changedPerson","undefined","returnedPerson","concat","setTimeout","window","confirm","map","p","type","i","changedPersons","catch","error","handleRemovalOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86e9beb2.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return(request.then(response => response.data))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\nconst methods = { getAll, create, update, remove }\n\nexport default methods","import React from 'react'\n\nconst Person = ({ person, handleRemoval }) => {\n\n  return (\n    <p>{person.name} {person.number} <button onClick={handleRemoval}>delete</button></p>\n\n  )\n}\n\nexport default Person;","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Person from './components/Person'\nimport './index.css'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null \n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (e) => {\n    e.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    const person = persons.find(person => person.name === personObject.name)\n    const changedPerson = { ...person, number: personObject.number}\n\n    if (person === undefined ){\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setErrorMessage(\n            `Added ${personObject.name}`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000);\n        })\n    } else {\n      \n      if(window.confirm(`${personObject.name} is already added to phonebook, replace the old number with the new one?`))\n      personService\n        .update(person.id,changedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(p => p.id !== person.id\n            ? p\n            : changedPerson\n          ))\n          setErrorMessage(\n            `${personObject.name} number has been changed`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000);\n          setNewName('')\n          setNewNumber('')\n        })\n      \n    }\n  }\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleFilter = (e) => {\n    setNewFilter(e.target.value)\n  }\n\n  const handleRemovalOf = (id, name) => {\n    const changedPersons = persons.filter(person => person.id !== id)\n   if(window.confirm(`Delete ${name} `)) {\n    personService\n      .remove(id)\n      .then(returnedPerson => {\n        setPersons(changedPersons)\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Information of ${name} has already been removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000);\n      })\n    }\n  }\n\n  const personToShow = newFilter === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={errorMessage} />\n\n      <p> filter shows with <input onChange={handleFilter}/> </p>\n\n      <h2>add a new</h2>\n\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <button type=\"submit\">add</button>\n      </form>\n\n      <h2>Numbers</h2>\n\n      <div>\n        {personToShow.map((person, i) => \n        <Person \n        key={i}\n        person={person}\n        handleRemoval={() => handleRemovalOf(person.id, person.name)}\n        />\n        )}\n      </div>\n\n    </div>\n  )\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n "],"sourceRoot":""}